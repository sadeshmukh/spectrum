---
import Layout from "../layouts/Layout.astro";
import { getSession } from "auth-astro/server";
import { SignOut } from "auth-astro/components";
import AmazonScraper from "../components/AmazonScraper.tsx";
import {
  db,
  Items,
  UserGuesses,
  Users,
  count,
  desc,
  sql,
  gte,
  eq,
} from "astro:db";

const session = await getSession(Astro.request);

if (!session) {
  return Astro.redirect("/login");
}

const user = session.user!;

if (!user.isAdmin) {
  return Astro.redirect("/dashboard");
}

const totalItems = await db.select({ count: count() }).from(Items);
const totalGuesses = await db.select({ count: count() }).from(UserGuesses);

const totalUsers = await db.select({ count: count() }).from(Users);

const today = new Date();
today.setHours(0, 0, 0, 0);

const guessesToday = await db
  .select({ count: count() })
  .from(UserGuesses)
  .where(gte(UserGuesses.submittedAt, today));

const averageAccuracy = await db
  .select({ avg: sql<number>`AVG(${UserGuesses.accuracy})` })
  .from(UserGuesses)
  .where(sql`${UserGuesses.accuracy} IS NOT NULL`);

const activeUsers = await db
  .select({ count: sql<number>`COUNT(DISTINCT ${UserGuesses.userId})` })
  .from(UserGuesses)
  .where(
    gte(UserGuesses.submittedAt, new Date(Date.now() - 7 * 24 * 60 * 60 * 1000))
  );

const recentItems = await db
  .select({
    id: Items.id,
    title: Items.title,
    link: Items.link,
    photoUrl: Items.photoUrl,
    actualPrice: Items.actualPrice,
    createdAt: Items.createdAt,
  })
  .from(Items)
  .orderBy(desc(Items.createdAt))
  .limit(4);

const recentGuessesData = await db
  .select({
    id: UserGuesses.id,
    userId: UserGuesses.userId,
    guess: UserGuesses.guess,
    accuracy: UserGuesses.accuracy,
    submittedAt: UserGuesses.submittedAt,
    itemId: UserGuesses.itemId,
    itemTitle: Items.title,
  })
  .from(UserGuesses)
  .leftJoin(Items, eq(UserGuesses.itemId, Items.id))
  .orderBy(desc(UserGuesses.submittedAt))
  .limit(5);

const globalStats = {
  totalUsers: totalUsers[0]?.count || 0,
  totalGuesses: totalGuesses[0]?.count || 0,
  totalItems: totalItems[0]?.count || 0,
  averageAccuracy: averageAccuracy[0]?.avg || 0,
  guessesToday: guessesToday[0]?.count || 0,
  activeUsers: activeUsers[0]?.count || 0,
};

const recentGuesses = recentGuessesData.map((guess) => ({
  userImage: "https://placehold.co/300x300",
  userName: guess.userId,
  result: `$${guess.guess}`,
  accuracy: `${guess.accuracy || 0}%`,
  submittedAt: guess.submittedAt.toLocaleDateString(),
  itemId: guess.itemId,
  itemTitle: guess.itemTitle || "Amazon Item",
}));

const recentItemsFormatted = recentItems.map((item) => ({
  id: item.id.toString(),
  title: item.title || "Amazon Item",
  link: item.link,
  photoUrl: item.photoUrl,
  actualPrice: item.actualPrice,
  createdAt: item.createdAt.toLocaleDateString(),
}));
---

<Layout title="Admin Dashboard - Spectrum">
  <div class="min-h-screen bg-black">
    <nav
      class="border-b border-red-500/20 bg-gradient-to-r from-red-950/20 to-red-900/20"
    >
      <div class="max-w-7xl mx-auto px-6">
        <div class="flex justify-between items-center h-16">
          <div class="flex items-center gap-4">
            <a
              href="/admin"
              class="text-xl font-bold text-white hover:text-accent transition-colors"
              >SPECTRUM</a
            >
            <div class="flex items-center gap-2">
              <div class="w-2 h-2 bg-red-500 rounded-full"></div>
              <span class="text-red-400 text-sm font-medium">ADMIN</span>
            </div>
          </div>
          <div class="flex items-center gap-4">
            <a
              href="/dashboard"
              class="text-muted hover:text-white text-sm transition-colors"
            >
              back to user
            </a>
            <div class="flex items-center gap-2">
              <img
                class="w-8 h-8 rounded-full ring-2 ring-red-500/30"
                src={user.image}
                alt={user.name}
              />
              <div class="flex flex-col">
                <span class="text-white text-sm font-medium">{user.name}</span>
                <span class="text-red-400 text-xs">Administrator</span>
              </div>
            </div>
            <SignOut class="text-muted hover:text-white text-sm">
              Sign out
            </SignOut>
          </div>
        </div>
      </div>
    </nav>

    <main class="max-w-7xl mx-auto px-6 py-8">
      <div class="mb-8 flex justify-between items-center">
        <h2 class="text-3xl font-bold text-white">Admin Dashboard</h2>
        <button
          id="refresh-stats"
          class="bg-accent text-black px-4 py-2 rounded-lg text-sm font-medium hover:bg-accent/90 transition-colors flex items-center gap-2"
        >
          <svg
            class="w-4 h-4"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
            ></path>
          </svg>
          Refresh Stats
        </button>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
        <div class="bg-card rounded-lg p-6 border border-accent/10">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-muted text-sm">Total Users</p>
              <p class="text-2xl font-bold text-white">
                {globalStats.totalUsers}
              </p>
            </div>
            <div
              class="w-10 h-10 bg-blue-500/10 rounded-lg flex items-center justify-center"
            >
              <svg
                class="w-5 h-5 text-blue-400"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"
                ></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-card rounded-lg p-6 border border-accent/10">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-muted text-sm">Total Items</p>
              <p class="text-2xl font-bold text-white">
                {globalStats.totalItems}
              </p>
            </div>
            <div
              class="w-10 h-10 bg-purple-500/10 rounded-lg flex items-center justify-center"
            >
              <svg
                class="w-5 h-5 text-purple-400"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"
                ></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-card rounded-lg p-6 border border-accent/10">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-muted text-sm">Total Guesses</p>
              <p class="text-2xl font-bold text-white">
                {globalStats.totalGuesses}
              </p>
            </div>
            <div
              class="w-10 h-10 bg-green-500/10 rounded-lg flex items-center justify-center"
            >
              <svg
                class="w-5 h-5 text-green-400"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                ></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-card rounded-lg p-6 border border-accent/10">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-muted text-sm">Average Accuracy</p>
              <p class="text-2xl font-bold text-white">
                {globalStats.averageAccuracy?.toFixed(1) || "â€”"}%
              </p>
            </div>
            <div
              class="w-10 h-10 bg-yellow-500/10 rounded-lg flex items-center justify-center"
            >
              <svg
                class="w-5 h-5 text-yellow-400"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-card rounded-lg p-6 border border-accent/10">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-muted text-sm">Guesses Today</p>
              <p class="text-2xl font-bold text-white">
                {globalStats.guessesToday}
              </p>
            </div>
            <div
              class="w-10 h-10 bg-orange-500/10 rounded-lg flex items-center justify-center"
            >
              <svg
                class="w-5 h-5 text-orange-400"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
                ></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-card rounded-lg p-6 border border-accent/10">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-muted text-sm">Active Users</p>
              <p class="text-2xl font-bold text-white">
                {globalStats.activeUsers}
              </p>
            </div>
            <div
              class="w-10 h-10 bg-green-500/10 rounded-lg flex items-center justify-center"
            >
              <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse">
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="mb-8">
        <div class="bg-card rounded-lg p-6">
          <h3 class="text-lg font-semibold text-white mb-4">Item Management</h3>
          <div class="space-y-4">
            <div
              class="flex items-center justify-between p-4 bg-gray-800/30 rounded-lg"
            >
              <div>
                <p class="text-white text-sm font-medium">Items Available</p>
                <p class="text-muted text-xs">
                  {globalStats.totalItems} items ready for guessing
                </p>
              </div>
            </div>

            <AmazonScraper client:load />
          </div>
        </div>
      </div>

      <div class="mb-8">
        <div class="bg-card rounded-lg p-6">
          <h3 class="text-lg font-semibold text-white mb-4">Recent Items</h3>
          {
            recentItemsFormatted.length === 0 ? (
              <div class="text-center py-8">
                <div class="w-12 h-12 bg-muted/10 rounded-full flex items-center justify-center mx-auto mb-4">
                  <svg
                    class="w-6 h-6 text-muted"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"
                    />
                  </svg>
                </div>
                <p class="text-muted text-sm">No items added yet</p>
              </div>
            ) : (
              <div class="space-y-3">
                {recentItemsFormatted.map((item) => (
                  <div class="flex items-center justify-between p-3 bg-gray-800/30 rounded-lg">
                    <div class="flex items-center gap-3">
                      {item.photoUrl ? (
                        <img
                          src={item.photoUrl}
                          alt={item.title}
                          class="w-8 h-8 rounded-lg object-cover"
                          onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
                        />
                      ) : null}
                      <div
                        class={`w-8 h-8 bg-accent/10 rounded-lg flex items-center justify-center ${item.photoUrl ? "hidden" : ""}`}
                      >
                        <svg
                          class="w-4 h-4 text-accent"
                          fill="none"
                          viewBox="0 0 24 24"
                          stroke="currentColor"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"
                          />
                        </svg>
                      </div>
                      <div>
                        <p class="text-white text-sm font-medium">
                          {item.title}
                        </p>
                        <p class="text-muted text-xs">
                          {item.actualPrice
                            ? `$${item.actualPrice}`
                            : "Price pending"}
                        </p>
                      </div>
                    </div>
                    <div class="text-right">
                      <p class="text-white text-sm">{item.createdAt}</p>
                      <div class="flex gap-2 mt-1">
                        <a
                          href={item.link}
                          target="_blank"
                          class="text-accent text-xs hover:underline"
                        >
                          View Item
                        </a>
                        <a
                          href={`/item-stats/${item.id}`}
                          class="text-blue-400 text-xs hover:underline"
                        >
                          View Stats
                        </a>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            )
          }
        </div>
      </div>

      <div class="bg-card rounded-lg p-6">
        <h3 class="text-lg font-semibold text-white mb-4">Recent Activity</h3>
        {
          recentGuesses.length === 0 ? (
            <div class="text-center py-8">
              <div class="w-12 h-12 bg-muted/10 rounded-full flex items-center justify-center mx-auto mb-4">
                <svg
                  class="w-6 h-6 text-muted"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                  />
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                  />
                </svg>
              </div>
              <p class="text-muted text-sm">No recent activity</p>
            </div>
          ) : (
            <div class="space-y-3">
              {recentGuesses.map((guess) => (
                <div class="flex items-center justify-between p-3 bg-gray-800/30 rounded-lg">
                  <div class="flex items-center gap-3">
                    <img
                      class="w-8 h-8 rounded-full"
                      src={guess.userImage}
                      alt={guess.userName}
                    />
                    <div>
                      <p class="text-white text-sm font-medium">
                        {guess.userName}
                      </p>
                      <p class="text-muted text-xs">
                        {guess.result} â€¢ {guess.accuracy} accuracy
                      </p>
                      <p class="text-muted text-xs">{guess.itemTitle}</p>
                    </div>
                  </div>
                  <div class="text-right">
                    <p class="text-white text-sm">{guess.submittedAt}</p>
                    <p class="text-muted text-xs">{guess.accuracy}</p>
                    <a
                      href={`/item-stats/${guess.itemId}`}
                      class="inline-flex items-center text-blue-400 hover:text-blue-300 transition-colors text-xs mt-1"
                    >
                      <svg
                        class="w-3 h-3 mr-1"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
                        />
                      </svg>
                      View Stats
                    </a>
                  </div>
                </div>
              ))}
            </div>
          )
        }
      </div>
    </main>
  </div>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const refreshButton = document.getElementById(
      "refresh-stats"
    ) as HTMLButtonElement;

    refreshButton?.addEventListener("click", async function () {
      try {
        refreshButton.disabled = true;
        refreshButton.innerHTML = `
          <svg class="w-4 h-4 animate-spin" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
          </svg>
          Refreshing...
        `;

        const response = await fetch("/api/admin/stats");
        const result = await response.json();

        if (result.success) {
          window.location.reload();
        } else {
          alert("Failed to refresh stats");
        }
      } catch (error) {
        console.error("Error refreshing stats:", error);
        alert("Error refreshing stats");
      } finally {
        refreshButton.disabled = false;
        refreshButton.innerHTML = `
          <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
          </svg>
          Refresh Stats
        `;
      }
    });
  });
</script>
